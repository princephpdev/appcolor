import Head from "next/head";
import Footer from "../components/Footer";
import Media from "../components/Media";
import { useCallback, useEffect, useMemo, useRef, useState } from "react";
import { Page, ColorPicker, FormLayout, TextField } from "@shopify/polaris";
import tinyColor from "tinycolor2";
import { debounce, throttle } from "lodash";

export default function Home() {
  const initialValues = {
    quote: "Your Quote",
    color: {
      hue: 300,
      brightness: 1,
      saturation: 0.7,
      alpha: 0.7,
    },
  };
  const [values, setValues] = useState(initialValues);
  const [mediasrc, setMediaSrc] = useState("/public/test.png");

  const canvasRef = useRef(null);

  const handleChange = useCallback(
    (value) => {
      let name = "";
      if (typeof value === "object") {
        name = "color";
      } else {
        name = "quote";
      }
      setValues({
        ...values,
        [name]: value,
      });
    },
    [values]
  );

  const debouncedChangeHandler = useMemo(
    () => debounce(handleChange, 50),
    [handleChange]
  );

  const throttledEventHandler = useMemo(
    () => throttle(handleChange, 300),
    [handleChange]
  );

  useEffect(() => {
    const { quote, color } = values;
    if (!quote || quote.length > 100) return false;
    let isMounted = true;
    const getQuoteImage = async () => {
      const canvas = canvasRef.current;
      const context = canvas.getContext("2d");
      context.fillStyle = "#000";
      context.fillRect(0, 0, 1000, 500);

      const hsvaColor = `hsva(${color.hue},${color.brightness * 100}%,${
        color.saturation * 100
      }%,${color.alpha})`;

      const hexColor = tinyColor(hsvaColor).toHexString();

      let text = quote;
      let textSize = "";
      const textLength = text.length;

      if (textLength <= 25) {
        textSize = '4rem "Lato"';
      } else if (textLength > 25 && textLength <= 50) {
        textSize = '2.5rem "Lato"';
      } else if (textLength > 50 && textLength <= 75) {
        textSize = '1.5rem "Lato"';
      } else {
        textSize = '1rem "Lato"';
      }
      context.font = textSize;
      context.textAlign = "center";
      context.fillStyle = hexColor; //This needs to change
      context.fillText(text, 500, 250, 1000);
      isMounted && setMediaSrc(canvas.toDataURL());
    };
    getQuoteImage();
    return () => {
      isMounted = false;
      debouncedChangeHandler.cancel();
    };
  }, [debouncedChangeHandler, values]);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Page title="Color Picker">
        <FormLayout>
          <ColorPicker
            color={values.color}
            onChange={debouncedChangeHandler}
            allowAlpha
          />
          <TextField
            value={values.quote}
            onChange={debouncedChangeHandler}
            label="Your Quote"
            type="text"
            autoComplete="off"
            placeholder="Your quote"
          />
        </FormLayout>
        <br />
        <div style={{ display: "none" }}>
          <canvas ref={canvasRef} width={1000} height={500} />
        </div>
        <Media src={mediasrc} />
        <Footer />
      </Page>
    </>
  );
}
